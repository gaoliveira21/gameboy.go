package cpu

import "github.com/gaoliveira21/gameboy.go/pkg/memory"

type GBZ80 struct {
	// Registers
	a, b, c, d, e, h, l uint8
	flags               *Flags

	sp, pc uint16

	mem *memory.Memory
}

func NewGBZ80(m *memory.Memory) *GBZ80 {
	g := &GBZ80{
		a: 0x01,
		b: 0x00,
		c: 0x13,
		d: 0x00,
		e: 0xd8,
		h: 0x01,
		l: 0x4d,
		flags: &Flags{
			value: 0xb0,
		},
		pc:  0x100,
		sp:  0xFFFE,
		mem: m,
	}

	g.boot()

	return g
}

func (gbz *GBZ80) Run() uint {
	return 0
}

func (gbz *GBZ80) Interrupt() {
	return
}

func (gbz *GBZ80) boot() {
	gbz.mem.Write(0xFF00, 0xCF)
	gbz.mem.Write(0xFF01, 0x00)
	gbz.mem.Write(0xFF02, 0x7E)
	gbz.mem.Write(0xFF04, 0xAB)
	gbz.mem.Write(0xFF05, 0x00)
	gbz.mem.Write(0xFF06, 0x00)
	gbz.mem.Write(0xFF07, 0xF8)
	gbz.mem.Write(0xFF0F, 0xE1)
	gbz.mem.Write(0xFF10, 0x80)
	gbz.mem.Write(0xFF11, 0xBF)
	gbz.mem.Write(0xFF12, 0xF3)
	gbz.mem.Write(0xFF13, 0xFF)
	gbz.mem.Write(0xFF14, 0xBF)
	gbz.mem.Write(0xFF16, 0x3F)
	gbz.mem.Write(0xFF17, 0x00)
	gbz.mem.Write(0xFF18, 0xFF)
	gbz.mem.Write(0xFF19, 0xBF)
	gbz.mem.Write(0xFF1A, 0x7F)
	gbz.mem.Write(0xFF1B, 0xFF)
	gbz.mem.Write(0xFF1C, 0x9F)
	gbz.mem.Write(0xFF1D, 0xFF)
	gbz.mem.Write(0xFF1E, 0xBF)
	gbz.mem.Write(0xFF20, 0xFF)
	gbz.mem.Write(0xFF21, 0x00)
	gbz.mem.Write(0xFF22, 0x00)
	gbz.mem.Write(0xFF23, 0xBF)
	gbz.mem.Write(0xFF24, 0x77)
	gbz.mem.Write(0xFF25, 0xF3)
	gbz.mem.Write(0xFF26, 0xF1)
	gbz.mem.Write(0xFF40, 0x91)
	gbz.mem.Write(0xFF41, 0x85)
	gbz.mem.Write(0xFF42, 0x00)
	gbz.mem.Write(0xFF43, 0x00)
	gbz.mem.Write(0xFF44, 0x00)
	gbz.mem.Write(0xFF45, 0x00)
	gbz.mem.Write(0xFF46, 0xFF)
	gbz.mem.Write(0xFF47, 0xFC)
	gbz.mem.Write(0xFF48, 0xFF)
	gbz.mem.Write(0xFF49, 0xFF)
	gbz.mem.Write(0xFF4A, 0x00)
	gbz.mem.Write(0xFF4B, 0x00)
	gbz.mem.Write(0xFFFF, 0x00)
}
